name: Daily Notion → Discord

on:
  schedule:
    # GitHub Actions の cron は UTC。JST 8:00 = 前日の 23:00 UTC
    - cron: '0 23 * * *'
  workflow_dispatch: {}  # 手動実行ボタン

jobs:
  run-daily:
    runs-on: ubuntu-latest
    env:
      # ===== Secrets を環境変数として渡す =====
      NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
      NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      # 任意（未設定なら config.py のデフォルトが使われる）
      NOTION_VERSION: ${{ secrets.NOTION_VERSION }}
      MESSAGE_GREETING: ${{ secrets.MESSAGE_GREETING }}
      MESSAGE_TEMPLATE: ${{ secrets.MESSAGE_TEMPLATE }}
      SELECTED_PROPERTIES: ${{ secrets.SELECTED_PROPERTIES }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'   # あなたのローカルと合わせる（3.9/3.10 など）

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install python-dotenv requests
          fi

      #（任意）.env を明示的に作る場合はこの手を使う
      # - name: Create .env from secrets
      #   run: |
      #     cat > .env <<EOF
      #     NOTION_API_KEY=${NOTION_API_KEY}
      #     NOTION_DATABASE_ID=${NOTION_DATABASE_ID}
      #     DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      #     NOTION_VERSION=${NOTION_VERSION}
      #     MESSAGE_GREETING=${MESSAGE_GREETING}
      #     MESSAGE_TEMPLATE=${MESSAGE_TEMPLATE}
      #     SELECTED_PROPERTIES=${SELECTED_PROPERTIES}
      #     EOF

      - name: Run script
        run: |
          python main.py

      - name: Upload run logs (artifact)
        if: always()
        run: |
          mkdir -p logs
          # main.py 側でログ出力しているならそのファイルをコピー
          # ここでは標準出力を保存例としてダミー
          echo "Run completed at $(date -u)Z" > logs/summary.txt
        continue-on-error: true
